// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import type { SupabaseClient } from '@supabase/supabase-js';

const g = globalThis as any;

// Enforce singleton client to prevent duplicates
let client: SupabaseClient<Database> = g.__sbClient;

if (!client) {
  const supabaseUrl = import.meta.env.VITE_SUPABASE_URL!;
  const supabaseAnonKey = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY!;
  
  client = createClient<Database>(supabaseUrl, supabaseAnonKey, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
    }
  });
  
  g.__sbClient = client;
  
  // Diagnostic log (temporary)
  if (import.meta.env.VITE_DEBUG_MEAL === '1') {
    console.info('[AUTH][CLIENT] singleton created', { id: client.toString().slice(-8) });
  }
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
export const supabase = client;